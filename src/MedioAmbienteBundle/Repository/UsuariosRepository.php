<?php

namespace MedioAmbienteBundle\Repository;

/**
 * UsuariosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

use Doctrine\DBAL\DBALException;

class UsuariosRepository extends \Doctrine\ORM\EntityRepository
{

	public function guardarUsuario($nombre,$apellidoPaterno,$apellidoMaterno,$correo,$username,$password,$estado,$rol){
		try {
		    $query = "	INSERT INTO usuarios(nombre,apellidoPaterno,apellidoMaterno,correo,username,password,estado,roles) VALUES('$nombre','$apellidoPaterno','$apellidoMaterno','$correo','$username','$password',$estado,'$rol')";
		    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
		    $stmt->execute();
        $result = '1';
            return $result;
        }catch (DBALException $e) {
            $message = $e->getCode();
            return $message;
        }
	}

	public function modificarUsuario($nombre,$apellidoPaterno,$apellidoMaterno,$correo,$username,$password,$estado,$id){
		try {
		    $query = "UPDATE  usuarios SET nombre='$nombre',apellidoPaterno='$apellidoPaterno',apellidoMaterno='$apellidoMaterno',correo='$correo',username='$username',password='$password',estado=$estado WHERE id='$id'";
		    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
		    $stmt->execute();
        $result = '1';
            return $result;
        }catch (DBALException $e) {
            $message = $e->getCode();
            return $message;
        }
	}

	public function eliminarUsuario($id){
		// try {
		    $query = "DELETE FROM usuarios WHERE id='$id'";
		    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
		    $stmt->execute();
        $result = '1';
            return $result;
        // }catch (DBALException $e) {
        //     $message = $e->getCode();
        //     return $message;
        // }
	}

	public function getUsuarios(){

	    $query = "	SELECT *FROM usuarios WHERE roles NOT LIKE '%ROLE_ADMIN%';";
	    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
	    $stmt->execute();
	    $usuarios = $stmt->fetchAll();
	    return $usuarios;
	}

	public function getUsuarioById($id){

	    $query = "SELECT *FROM usuarios WHERE id=$id";
	    $stmt = $this->getEntityManager()->getConnection()->prepare($query);
	    $stmt->execute();
	    $usuarios = $stmt->fetchAll();
	    return $usuarios;
	}

}
